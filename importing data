class SPARQLQueryDispatcher {
    constructor(endpoint) {
        this.endpoint = endpoint;
    }

    async query(sparqlQuery) {
        const fullUrl = this.endpoint + '?query=' + encodeURIComponent(sparqlQuery);
        const headers = {
            'Accept': 'application/sparql-results+json',
            'User-Agent': 'MyApp/1.0 (your_email@example.com)' // Replace with your email or app identifier
        };

        try {
            const response = await fetch(fullUrl, { headers });
            if (!response.ok) {
                throw new Error(`HTTP error! Status: ${response.status}`);
            }
            return response.json();
        } catch (error) {
            console.error('Error fetching or parsing data:', error);
        }
    }
}

const endpointUrl = 'https://query.wikidata.org/sparql';
const sparqlQuery = `SELECT DISTINCT ?ingredient ?ingredientLabel ?calories WHERE {
    ?food wdt:P31 wd:Q2095.
    OPTIONAL { ?food wdt:P527 ?ingredient. }
    { ?ingredient wdt:P7971 ?calories. }
    SERVICE wikibase:label { bd:serviceParam wikibase:language "[AUTO_LANGUAGE],en". }
  }`;

const queryDispatcher = new SPARQLQueryDispatcher(endpointUrl);
queryDispatcher.query(sparqlQuery).then(data => {
    if (data) {
        console.log(data);
    } else {
        console.log('No data received.');
    }
});

queryDispatcher.query(sparqlQuery).then(data => {
    if (data && data.results && data.results.bindings.length > 0) {
        data.results.bindings.forEach((binding, index) => {
            console.log(`Result ${index + 1}:`);
            Object.keys(binding).forEach(variable => {
                console.log(`${variable}: ${binding[variable].value}`);
            });
            console.log('----------------------');
        });
    } else {
        console.log('No data received.');
    }
});
